/*
 * Copyright (C) 2022 Carry Assistant Trolley (C.A.T) Technologies
 *  
 * Adwait P. Naik, February 26, 2022.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02111, USA.
 */

Compute angles;
/*RSSI values are calculated between the beacons and converted into metres.*/
/*a, b, c are the RSSI values measured for a particular beacon.*/
Initialize  a, b, c;
branch(RSSI_a)
[RSSI a] 
{ /*RSSI value between the RSSI values of the robot and the phone and offset_a is the offset value for maximum received signal.*/
  RSSI a;
  offset_a;
  compute the distance from RSSI value;
/*The distance is computed in metres.*/
d_a = 20ˆ(a+offset_a);
while(d_a > 0)
{
  if(d_a < threshold) [Yes] {
  /*Threshold is the minimum distance to receive the RSSI value.*/
  recalculate d_a;
  return;
}
else [No] {
  calculate angle;
}
}
}
branch(RSSI_b)
[RSSI b] 
{ /*RSSI value between the RSSI values of the robot and the static beacon and offset_b is the offset value for maximum received signal.*/
  RSSI b;
  offset_b;
  compute the distance from RSSI value;
/*The distance is computed in metres.*/
d_b = 20ˆ(b+offset_b);
while(d_b > 0)
{
  if(d_b < threshold) [Yes] {
  /*Threshold is the minimum distance to receive the RSSI value.*/
  recalculate d_b;
  return;
}
else [No] {
  calculate angle;
}
}
}
branch(RSSI_c)
[RSSI c] 
{ /*RSSI between the RSSI values of the static beacon and the phone and offset_c is the offset value for maximum received signal.*/
  RSSI c;
  offset_c;
  compute the distance from RSSI value;
/*The distance is computed in metres.*/
d_c = 20ˆ(c+offset_c);
while(d_c > 0)
{
  if(d_c < threshold) [Yes] {
  /*Threshold is the minimum distance to receive the RSSI value.*/
  recalculate d_c;
  return;
}
else [No] {
  calculate angle;
}
}
}
