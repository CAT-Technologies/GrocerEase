writeMotor;
Initialize the variables to store Left/Right Motor's analog output;
branch(left_motor)
  [LeftMotorAO lm] {
  /*Store the analog output for left motor.
  */
  L;
  if(L>=0) [Yes]{
    /*lw_Forward() function will rotate the left forward wheel in clock-wise direction.*/
  lw_Forward();
  /*pwmWrite() function will pass the analog value to the port 23 to rotate the wheel.*/
  pwmWrite(23, L);
  } else [No] {
    /*lw_Backward() function will rotate the left forward wheel in anti clock-wise direction.*/ 
  lw_Backward();
  /*pwmWrite() function will pass the (inverse) of the analog value to the port 23 to rotate the wheel.*/
  pwmWrite(23, -L)
  }
}
branch(right_motor)
  [RightMotorAO rm] {
  /*Store the analog output for Right motor.*/
  R;
  if(R>=0) [Yes]{
    /*rw_Forward() function will rotate the right forward wheel in clock-wise direction.*/
  rw_Forward();
  /*pwmWrite() function will pass the analog value to the port 26 to rotate the wheel.*/
  pwmWrite(26, R);
  } else [No] {
    /*rw_Backward() function will rotate the right forward wheel in anti clock-wise direction.*/ 
  rw_Backward();
  /*pwmWrite() function will pass the (inverse) of the analog value to the port 26 to rotate the wheel.*/
  pwmWrite(26, -R)
  }
}